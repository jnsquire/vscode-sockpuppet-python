name: Python Package CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv pip install --system -e .
        uv pip install --system pytest pytest-cov mypy
    
    - name: Install Windows dependencies
      if: runner.os == 'Windows'
      run: uv pip install --system -e ".[windows]"
    
    - name: Run type checking
      run: mypy vscode_sockpuppet --ignore-missing-imports
    
    - name: Run tests
      run: pytest tests/ -v --cov=vscode_sockpuppet --cov-report=xml
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Install dependencies
      run: |
        uv pip install --system -e ".[dev]"
        uv pip install --system ruff
    
    - name: Lint with ruff
      run: ruff check vscode_sockpuppet
    
    - name: Check formatting with ruff
      run: ruff format --check vscode_sockpuppet
